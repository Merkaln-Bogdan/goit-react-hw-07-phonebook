{"version":3,"sources":["components/PhonebookListItem/PhonebookListItem.module.css","components/Phonebook/PhoneBook.module.css","components/AlertWindow/AlertWindow.module.css","stylesTransition/AlertTransition.module.css","stylesTransition/PhonebookListSlide.module.css","stylesTransition/PhoneFilter.module.css","stylesTransition/TitleSlideTransition.module.css","components/redux/TaskPhonebook.js","components/redux/ContactsOperatins/ContactsOperation.js","components/redux/Selectors/ContactSelectors.js","components/AlertWindow/AlertWindow.js","components/Phonebook/PhonebookEditor.js","components/Filter/Filter.js","components/PhonebookListItem/PhoneBookListItem.js","components/Phonebook/Phonebook.js","App.js","components/redux/ContactsReducer/ContactsReducer.js","components/redux/store.js","index.js"],"names":["module","exports","addContactsRequest","createAction","addContactsSuccess","addContactsError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","changeFilter","addContacts","name","number","dispatch","TaskPhoneBook","Axios","post","then","response","data","catch","error","fetchContacts","get","removeContact","id","delete","getActions","state","actions","item","getFilter","filter","visibleContacts","createSelector","contact","toLowerCase","includes","AlertWindow","className","styleAlert","Alert","AlertMessage","PhonebookEditor","alertName","handleChange","e","target","value","setState","handleSubmit","props","contacts","preventDefault","find","element","setTimeout","alert","this","style","form","onSubmit","inputField","type","onChange","buttonAdd","CSSTransition","in","timeout","classNames","alertSlideTransition","unmountOnExit","Component","MapDispatchToProps","ContactsOperatins","connect","ContactSelector","onChangeFilter","taskPhonebook","wrapperFilter","labelMarkup","PhonebookListItem","onRemovePersonData","key","listItem","dataPerson","buttonRemove","onClick","ContactOperations","phoneList","length","PhoneFilter","TransitionGroup","component","contactList","map","slideTransition","App","onFetchContacts","Wrapper","appear","TitleSlideTransition","title","ContactsOperations","createReducer","TaskPhonebook","action","payload","combineReducers","store","configureStore","reducer","actionsReducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17e6ecad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"PhonebookListItem_listItem__3WmFw\",\"dataPerson\":\"PhonebookListItem_dataPerson__x_Wwe\",\"buttonRemove\":\"PhonebookListItem_buttonRemove__BO8KH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PhoneBook_wrapper__22FBk\",\"title\":\"PhoneBook_title__2Gn7s\",\"form\":\"PhoneBook_form__3pajh\",\"buttonAdd\":\"PhoneBook_buttonAdd__39hPw\",\"inputField\":\"PhoneBook_inputField__3p_Bu\",\"wrapperFilter\":\"PhoneBook_wrapperFilter__2-wYk\",\"labelMarkup\":\"PhoneBook_labelMarkup__1R54G\",\"phoneList\":\"PhoneBook_phoneList__I63Ci\",\"contactList\":\"PhoneBook_contactList__9qPFk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Alert\":\"AlertWindow_Alert__1S-AC\",\"AlertMessage\":\"AlertWindow_AlertMessage__38vMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"AlertTransition_enter__3xsgH\",\"enterActive\":\"AlertTransition_enterActive__2oyUz\",\"exit\":\"AlertTransition_exit__1_Lc3\",\"exitActive\":\"AlertTransition_exitActive__3q0lc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"PhonebookListSlide_enter__1xwa-\",\"enterActive\":\"PhonebookListSlide_enterActive__3GjhH\",\"exit\":\"PhonebookListSlide_exit__2L-3x\",\"exitActive\":\"PhonebookListSlide_exitActive__aGnlb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"PhoneFilter_enter__31TqJ\",\"enterActive\":\"PhoneFilter_enterActive__xniGF\",\"exit\":\"PhoneFilter_exit__3qYpn\",\"exitActive\":\"PhoneFilter_exitActive__2P_Lq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"TitleSlideTransition_enter__ywmOT\",\"appear\":\"TitleSlideTransition_appear__1LScn\",\"enterActive\":\"TitleSlideTransition_enterActive__2Xvx5\",\"appearActive\":\"TitleSlideTransition_appearActive__99Zvx\",\"appearDone\":\"TitleSlideTransition_appearDone__yzsRY\",\"exit\":\"TitleSlideTransition_exit__1noBt\",\"exitActive\":\"TitleSlideTransition_exitActive__3p12s\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nconst addContactsRequest = createAction(\"contacts/addRequest\");\r\nconst addContactsSuccess = createAction(\"contacts/addSuccess\");\r\nconst addContactsError = createAction(\"contacts/addError\");\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetchRequest\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchError\");\r\n\r\nconst removeContactsRequest = createAction(\"contacts/removeRequest\");\r\nconst removeContactsSuccess = createAction(\"contacts/removeSuccess\");\r\nconst removeContactsError = createAction(\"contacts/removeError\");\r\n\r\nconst changeFilter = createAction(\"contacts/filter\");\r\n\r\nexport default {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n  changeFilter,\r\n};\r\n","import TaskPhoneBook from \"../TaskPhonebook\";\r\nimport Axios from \"axios\";\r\n// Axios.defaults.baseRL = \"http://localhost:2000\";\r\nconst addContacts = (name, number) => (dispatch) => {\r\n  dispatch(TaskPhoneBook.addContactsRequest());\r\n  Axios.post(\"http://localhost:2000/contacts\", { name, number })\r\n    .then((response) =>\r\n      dispatch(TaskPhoneBook.addContactsSuccess(response.data))\r\n    )\r\n    .catch((error) => dispatch(TaskPhoneBook.addContactsError()));\r\n};\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(TaskPhoneBook.fetchContactsRequest());\r\n  Axios.get(\"http://localhost:2000/contacts\")\r\n    .then((response) =>\r\n      dispatch(TaskPhoneBook.fetchContactsSuccess(response.data))\r\n    )\r\n    .catch((error) => dispatch(TaskPhoneBook.fetchContactsError()));\r\n};\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(TaskPhoneBook.removeContactsRequest());\r\n  Axios.delete(`http://localhost:2000/contacts/${id}`)\r\n    .then(() => dispatch(TaskPhoneBook.removeContactsSuccess(id)))\r\n    .catch((error) => dispatch(TaskPhoneBook.removeContactsError()));\r\n};\r\nexport default { addContacts, fetchContacts, removeContact };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\nconst getActions = (state) => state.actions.item;\r\n\r\nconst getFilter = (state) => state.actions.filter;\r\nconst visibleContacts = createSelector(\r\n  [getActions, getFilter],\r\n  (actions, filter) => {\r\n    return actions.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getActions,\r\n  getFilter,\r\n  visibleContacts,\r\n};\r\n","import React from \"react\";\r\nimport styleAlert from \"./AlertWindow.module.css\";\r\n\r\nconst AlertWindow = () => {\r\n  return (\r\n    <div className={styleAlert.Alert}>\r\n      <span className={styleAlert.AlertMessage}>\r\n        Номер с таким именем уже существует!\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default AlertWindow;\r\n","import React, { Component } from \"react\";\r\nimport style from \"../Phonebook/PhoneBook.module.css\";\r\nimport alertSlideTransition from \"../../stylesTransition/AlertTransition.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactsOperatins from \"../redux/ContactsOperatins/ContactsOperation\";\r\nimport ContactSelector from \"../redux/Selectors/ContactSelectors\";\r\nimport AlertWindow from \"../AlertWindow/AlertWindow\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nclass PhonebookEditor extends Component {\r\n  state = { name: \"\", number: \"\", alertName: null };\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    const { addContacts, contacts } = this.props;\r\n\r\n    e.preventDefault();\r\n    if (\r\n      contacts.find(\r\n        (element) =>\r\n          element.name.toLowerCase() === this.state.name.toLowerCase()\r\n      )\r\n    ) {\r\n      this.setState({\r\n        alertName: true,\r\n      });\r\n      return setTimeout(() => {\r\n        this.setState({ alertName: null });\r\n      }, 3000);\r\n    }\r\n    if (this.state.name === \"\" || this.state.number === \"\") {\r\n      alert(\"Введите имя и номер!\");\r\n    } else {\r\n      addContacts(this.state.name, this.state.number);\r\n      this.setState({ name: \"\", number: \"\" });\r\n    }\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <div>\r\n          <form className={style.form} onSubmit={this.handleSubmit}>\r\n            <label>\r\n              Имя\r\n              <input\r\n                className={style.inputField}\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={this.handleChange}\r\n                name=\"name\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Номер\r\n              <input\r\n                className={style.inputField}\r\n                type=\"text\"\r\n                value={number}\r\n                onChange={this.handleChange}\r\n                name=\"number\"\r\n              />\r\n            </label>\r\n\r\n            <button className={style.buttonAdd} type=\"submit\">\r\n              Добавить контакт\r\n            </button>\r\n          </form>\r\n          <div></div>\r\n        </div>\r\n        <CSSTransition\r\n          in={this.state.alertName}\r\n          timeout={250}\r\n          classNames={alertSlideTransition}\r\n          unmountOnExit\r\n        >\r\n          <AlertWindow />\r\n        </CSSTransition>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst MapStateToProps = (state) => ({\r\n  contacts: ContactSelector.visibleContacts(state),\r\n});\r\n\r\nconst MapDispatchToProps = {\r\n  addContacts: ContactsOperatins.addContacts,\r\n};\r\nexport default connect(MapStateToProps, MapDispatchToProps)(PhonebookEditor);\r\n","import React from \"react\";\r\nimport style from \"../Phonebook/PhoneBook.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport taskPhonebook from \"../redux/TaskPhonebook\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <div className={style.wrapperFilter}>\r\n    <label className={style.labelMarkup}>\r\n      Найти номер\r\n      <input\r\n        className={style.inputField}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\nconst MapStateToProps = (state) => ({\r\n  value: state.actions.filter,\r\n});\r\nconst MapDispatchToProps = {\r\n  onChangeFilter: taskPhonebook.changeFilter,\r\n};\r\nexport default connect(MapStateToProps, MapDispatchToProps)(Filter);\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\n\r\nimport style from \"./PhonebookListItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nconst PhonebookListItem = ({ id, name, number, onRemovePersonData }) => (\r\n  <div>\r\n    <li key={id} className={style.listItem}>\r\n      <span className={style.dataPerson}>{name}:</span>\r\n      <span className={style.dataPerson}>{number}</span>\r\n      <button className={style.buttonRemove} onClick={onRemovePersonData}>\r\n        ✕\r\n      </button>\r\n    </li>\r\n  </div>\r\n);\r\n\r\nexport default PhonebookListItem;\r\n\r\nPhonebookListItem.propTypes = {\r\n  id: PropTypes.string,\r\n  onRemovePersonData: PropTypes.func,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport style from \"./PhoneBook.module.css\";\r\nimport PhonebookEditor from \"./PhonebookEditor\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport PhonebookListItem from \"../PhonebookListItem/PhoneBookListItem\";\r\nimport slideTransition from \"../../stylesTransition/PhonebookListSlide.module.css\";\r\nimport PhoneFilter from \"../../stylesTransition/PhoneFilter.module.css\";\r\nimport ContactSelector from \"../redux/Selectors/ContactSelectors\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactOperations from \"../redux/ContactsOperatins/ContactsOperation\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nfunction Phonebook({ contacts, onRemovePersonData }) {\r\n  return (\r\n    <>\r\n      <div className={style.phoneList}>\r\n        <h2>Контакты</h2>\r\n\r\n        <PhonebookEditor />\r\n        {contacts.length > 0 ? (\r\n          <CSSTransition\r\n            in={contacts.length > 1}\r\n            timeout={250}\r\n            classNames={PhoneFilter}\r\n            unmountOnExit\r\n          >\r\n            <Filter />\r\n          </CSSTransition>\r\n        ) : (\r\n          <h2>Нет контактов</h2>\r\n        )}\r\n        <TransitionGroup component=\"ul\" className={style.contactList}>\r\n          {contacts.map((contact) => (\r\n            <CSSTransition\r\n              key={contact.id}\r\n              timeout={300}\r\n              classNames={slideTransition}\r\n            >\r\n              <PhonebookListItem\r\n                key={contact.id}\r\n                name={contact.name}\r\n                number={contact.number}\r\n                onRemovePersonData={() => onRemovePersonData(contact.id)}\r\n              />\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nconst MapStateToProps = (state) => ({\r\n  contacts: ContactSelector.visibleContacts(state),\r\n});\r\nconst MapDispatchToProps = {\r\n  onRemovePersonData: ContactOperations.removeContact,\r\n};\r\nexport default connect(MapStateToProps, MapDispatchToProps)(Phonebook);\r\n\r\nPhonebook.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onRemovePersonData: PropTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PhoneBook from \"./components/Phonebook/Phonebook\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport style from \"./components/Phonebook/PhoneBook.module.css\";\r\nimport TitleSlideTransition from \"./stylesTransition/TitleSlideTransition.module.css\";\r\nimport ContactsOperations from \"./components/redux/ContactsOperatins/ContactsOperation\";\r\nimport ContactSelector from \"./components/redux/Selectors/ContactSelectors\";\r\nimport { connect } from \"react-redux\";\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={style.Wrapper}>\r\n        <CSSTransition\r\n          in\r\n          appear\r\n          timeout={1000}\r\n          classNames={TitleSlideTransition}\r\n          unmountOnExit\r\n        >\r\n          <h1 className={style.title}>Phonebook</h1>\r\n        </CSSTransition>\r\n        <PhoneBook />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst MapStateToProps = (state) => ({\r\n  contacts: ContactSelector.visibleContacts(state),\r\n});\r\nconst MapDispatchToProps = {\r\n  onFetchContacts: ContactsOperations.fetchContacts,\r\n};\r\nexport default connect(MapStateToProps, MapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport TaskPhonebook from \"../TaskPhonebook\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nconst onAddContact = (state, action) => [...state, action.payload];\r\nconst onRemoveContact = (state, action) =>\r\n  state.filter((contact) => contact.id !== action.payload);\r\n\r\nconst item = createReducer([], {\r\n  [TaskPhonebook.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [TaskPhonebook.addContactsSuccess]: onAddContact,\r\n  [TaskPhonebook.removeContactsSuccess]: onRemoveContact,\r\n});\r\n\r\nconst filter = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case TaskPhonebook.changeFilter.type:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n// const error = createReducer();\r\nexport default combineReducers({ item, filter });\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport actionsReducers from \"./ContactsReducer/ContactsReducer\";\r\nconst store = configureStore({ reducer: { actions: actionsReducers } });\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./components/redux/store\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}